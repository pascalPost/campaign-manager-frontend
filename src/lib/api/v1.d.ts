/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/ping": {
    /** Ping server */
    get: {
      responses: {
        /** @description Success response */
        200: {
          content: never;
        };
      };
    };
  };
  "/tasks": {
    /** List tasks */
    get: {
      responses: {
      };
    };
    /** Add new task */
    post: {
      responses: {
      };
    };
  };
  "/projects": {
    /** List projects */
    get: {
      responses: {
      };
    };
    /** Add new projects */
    post: {
      responses: {
      };
    };
  };
  "/fileTree": {
    /** List files and folders in root (/) */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["FileTreeEntry"][];
          };
        };
      };
    };
    /** Add new file or folder */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FileTreeEntry"];
        };
      };
      responses: {
        /** @description Path created. */
        201: {
          content: {
            "application/json": components["schemas"]["FileTreePath"];
          };
        };
        /** @description Path already exists. */
        409: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/fileTree/{path}": {
    /** List files and folders in the given path */
    get: {
      parameters: {
        path: {
          path: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["FileTreeEntry"][];
          };
        };
      };
    };
    /** Delete files or folders */
    delete: {
      parameters: {
        path: {
          path: string;
        };
      };
      responses: {
        /** @description Success with no content */
        204: {
          content: never;
        };
        /** @description Non-existing path */
        404: {
          content: never;
        };
      };
    };
  };
  "/file/{filePath}": {
    /** Download plain/text file */
    get: {
      parameters: {
        path: {
          filePath: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "plain/text": string;
          };
        };
        /** @description No plain/text file requested */
        400: {
          content: never;
        };
        /** @description Non-existing path */
        404: {
          content: never;
        };
      };
    };
    /** Update file */
    put: {
      parameters: {
        path: {
          filePath: string;
        };
      };
      requestBody?: {
        content: {
          "plain/text": string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: never;
        };
        /** @description No plain/text file requested */
        400: {
          content: never;
        };
        /** @description Non-existing path */
        404: {
          content: never;
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    FileTreePath: {
      /** @example path/to/file */
      path: string;
    };
    FileTreeEntry: {
      /** @example path/to/file */
      path: string;
      isDir: boolean;
    };
    Error: {
      message: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
